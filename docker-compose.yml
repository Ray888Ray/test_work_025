version: '3.9'

services:

  web:
    build: .
    container_name: fastapi_app
    command: /app/app/entrypoint.sh
    ports:
      - "8000:8000"
    depends_on:
      - test
      - db
      - redis
    env_file: .env
    environment:
      - PYTHONPATH=/app

  celery:
    build: .
    container_name: celery_worker
    command: celery -A app.tasks.celery_tasks worker --loglevel=info
    depends_on:
      - redis
      - db
      - web
    env_file: .env
    environment:
      - PYTHONPATH=/app

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"

  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    env_file:
      - .env

  test_db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${TEST_DB_USER}
      POSTGRES_PASSWORD: ${TEST_DB_PASSWORD}
      POSTGRES_DB: ${TEST_DB_NAME}
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${TEST_DB_USER}" ]
      interval: 5s
      retries: 5
    tmpfs:
      - /var/lib/postgresql/data
    env_file:
      - .env

  test:
    build: .
    container_name: test_runner
    command: pytest tests/
    depends_on:
      - test_db
      - redis
    env_file: .env
    environment:
      - PYTHONPATH=/app
      - TEST_DATABASE_URL=${TEST_DATABASE_URL}

volumes:
  pg_data:
